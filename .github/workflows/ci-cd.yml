name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on pushes to the main branch

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set OpenAI API key as environment variable
      - name: Set OpenAI API key
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

      # BACKEND TESTS
      - name: Set up Python for backend
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.0"

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: ./backend
        run: |
          source venv/bin/activate
          python manage.py test

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: test  # Run deploy job only if tests pass

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Install Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      # Build and push backend Docker image
      - name: Build and push backend image
        working-directory: ./backend
        run: |
          docker build -t bolisn/backend:latest .
          docker push bolisn/backend:latest

      # Build and push frontend Docker image
      - name: Build and push frontend image
        working-directory: ./frontend
        run: |
          docker build -t bolisn/frontend:latest .
          docker push bolisn/frontend:latest

      # Deploy with Docker Compose
      - name: Deploy application using Docker Compose
        run: |
          docker-compose -f docker-compose.prod.yml up -d
